@model MovieRental.Models.Order

@{
    ViewBag.Title = "Create";
}

<h2>Ordering "@Model.Movie.Name"</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.From, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.From, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.From, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.To, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.To, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.To, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- The value should be calculated on fly from the selected dates and Movie.Price -->

        <div class="form-group">
            @Html.LabelFor(model => model.Rent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rent, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Rent, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Your contact information</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Owner.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Order" class="btn btn-default" style="width: 100%" />
            </div>
        </div>
    </div>
}

<div class="btn-group">
    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index","Movies")'">
        Back to List of movies
    </button>
    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index","Orders")'">
        Go to List of orders
    </button>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script>
    function calculateRentPrice() {
        var from = new Date($("#From").val());
        var to = new Date($("#To").val());

        var dateDifferenceInDays = (to.getTime() - from.getTime()) / (24*60*60*1000);
        var rentPrice = @Model.Movie.Price * (dateDifferenceInDays + 1);

        $("#Rent").val(rentPrice.toString());
    }

    $("#To").change(calculateRentPrice);
    $("#From").change(calculateRentPrice);
        </script>
    }
